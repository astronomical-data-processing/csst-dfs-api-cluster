# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import grpc_pb2 as grpc__pb2

class SourceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Read = channel.unary_unary(
        '/Source/Read',
        request_serializer=grpc__pb2.ReadRequest.SerializeToString,
        response_deserializer=grpc__pb2.ReadResponse.FromString,
        )
    self.Watch = channel.unary_stream(
        '/Source/Watch',
        request_serializer=grpc__pb2.WatchRequest.SerializeToString,
        response_deserializer=grpc__pb2.WatchResponse.FromString,
        )


class SourceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Read(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Watch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SourceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Read': grpc.unary_unary_rpc_method_handler(
          servicer.Read,
          request_deserializer=grpc__pb2.ReadRequest.FromString,
          response_serializer=grpc__pb2.ReadResponse.SerializeToString,
      ),
      'Watch': grpc.unary_stream_rpc_method_handler(
          servicer.Watch,
          request_deserializer=grpc__pb2.WatchRequest.FromString,
          response_serializer=grpc__pb2.WatchResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Source', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
